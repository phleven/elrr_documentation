volumes:
  db_data_service:
  db_data_sync:
  db_data_lrs:
  kafka_storage:
services:
  kafka:
  # Does NOT work with latest bitnami image!!!
    image: 'apache/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: Mk3OEYBSD34fcwNTJENDM2Qk
    volumes:
      - kafka_storage:/bitnami/kafka

  # this DB is for Aggregator and Sync
  services-db:
    image: postgres:17
    volumes:
      - db_data_service:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: service_user
      POSTGRES_PASSWORD: service_password
      POSTGRES_DB: service_db
    ports:
      - "5432:5432" # Useful if we only want to run the DB w/o other services

  # this DB is for Datasync
  sync-db:
    image: postgres:17
    volumes:
      - db_data_sync:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sync_user
      POSTGRES_PASSWORD: sync_password
      POSTGRES_DB: sync_db
    ports:
      - "5431:5432" # Useful if we only want to run the DB w/o other services
  lrs-db:
    image: postgres:latest
    volumes:
      - db_data_lrs:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: lrsql_db
    ports:
      - "5433:5432" # Useful if we only want to run the DB w/o other services
  lrs:
    #build: . # switch to this for active dev
    image: yetanalytics/lrsql:latest
    command:
      - /lrsql/bin/run_postgres.sh
    ports:
      - "8083:8080"
    depends_on:
      - lrs-db
    environment:
      LRSQL_API_KEY_DEFAULT: my_key
      LRSQL_API_SECRET_DEFAULT: my_secret
      LRSQL_ADMIN_USER_DEFAULT: my_username
      LRSQL_ADMIN_PASS_DEFAULT: my_password
      LRSQL_DB_HOST: lrs-db
      LRSQL_DB_NAME: lrsql_db
      LRSQL_DB_USER: username
      LRSQL_DB_PASSWORD: password
      # If Postgres is too slow to start, increase this
      LRSQL_POOL_INITIALIZATION_FAIL_TIMEOUT: 10000
      # Set to true if using dev UI, domain name, proxy server, etc.
      LRSQL_ALLOW_ALL_ORIGINS: true
      LRSQL_ENABLE_STMT_HTML: false
